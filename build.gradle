/*
 * TaskDriver build configuration.
 * Copyright 2016 by Chad Juliano
 *
 * $Id: 29565e145c1d9c03ddfea55cb38012bb83c9dad1 $
 */

plugins {
    id 'project-report'
}

repositories {
    mavenLocal()
    maven {
        url  'http://dl.bintray.com/chadj2/cmd-utils'
    }
    jcenter()
}

// include tasks and configuration to bundle this project as a launch4j executable.
apply from: 'dist/launch4j.gradle'
apply from: 'dist/bintray.gradle'
apply from: 'dist/debug.gradle'

dependencies {

    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    // contains the logback-test.xml file needed on the classpath
    testRuntime files(project.loggingDir)

    // Note: This is just a placeholder so that launch4j will  add ./lib/config to its classpath.
    runtime files("${project.distDir}/config")
}

/**
 * The below block determines the files that get copied into the distribution.
 * We create a new distribution called 'launch4j' because 'main' has a different organization.
 * https://docs.gradle.org/current/userguide/distribution_plugin.html
 */
distributions {
    launch4j {
        contents {
            from(project.projectDir) {
                include 'LICENSE.*'
            }
            from(projectDir) {
                include 'README.md'
            }
            into('lib') {
                from(configurations.runtime.files) { exclude 'config' }
                from(jar.outputs.files)
            }
        }
    }
}

/**
 * Junit test plugin
 * https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html
 */
test {
    testLogging {
        showStandardStreams true
    }

    // listen to standard out and standard error of the test JVM(s)
    afterTest { descriptor, result ->
       logger.lifecycle("${descriptor} result: ${result}")
    }
}

/**
 * From the maven-publish plugin.
 * https://docs.gradle.org/current/userguide/maven_plugin.html
 */
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact launch4jDistZip
        }
    }
}
